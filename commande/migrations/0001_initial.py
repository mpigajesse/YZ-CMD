# Generated by Django 5.1.7 on 2025-08-22 12:09

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('client', '0001_initial'),
        ('parametre', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnumEtatCmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True)),
                ('ordre', models.IntegerField(default=0)),
                ('couleur', models.CharField(default='#6B7280', max_length=7)),
            ],
            options={
                'verbose_name': "Définition d'état de commande(EnumEtatCmd)",
                'verbose_name_plural': "Définitions d'états de commande(EnumEtatCmd)",
                'ordering': ['ordre', 'libelle'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_cmd', models.CharField(max_length=50, unique=True)),
                ('id_yz', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('origine', models.CharField(choices=[('OC', 'Opérateur Confirmation'), ('ADMIN', 'Administrateur'), ('SYNC', 'Synchronisation')], default='SYNC', max_length=10)),
                ('date_cmd', models.DateField(default=django.utils.timezone.now)),
                ('total_cmd', models.FloatField()),
                ('adresse', models.TextField()),
                ('motif_annulation', models.TextField(blank=True, null=True)),
                ('is_upsell', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('last_sync_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de dernière synchronisation')),
                ('ville_init', models.CharField(blank=True, max_length=100, null=True)),
                ('produit_init', models.TextField(blank=True, null=True)),
                ('compteur', models.IntegerField(default=0, verbose_name="Compteur d'utilisation")),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='client.client')),
                ('ville', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='parametre.ville')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_cmd', '-date_creation', 'id_yz'],
            },
        ),
        migrations.CreateModel(
            name='Envoi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_envoi', models.DateField(default=django.utils.timezone.now, help_text="Date prévue pour l'envoi", verbose_name="Date d'envoi")),
                ('date_livraison_prevue', models.DateField(verbose_name='Date de livraison prévue')),
                ('date_livraison_effective', models.DateField(blank=True, null=True, verbose_name='Date de livraison effective')),
                ('date_report', models.DateField(blank=True, null=True, verbose_name='Date de report')),
                ('motif_report', models.TextField(blank=True, null=True, verbose_name='Motif du report')),
                ('status', models.CharField(choices=[('en_preparation', 'En préparation'), ('en_attente', 'En attente de livraison'), ('en_cours', 'En cours de livraison'), ('reporte', 'Reporté'), ('livre', 'Livré'), ('annule', 'Annulé')], default='en_preparation', max_length=20)),
                ('numero_envoi', models.CharField(blank=True, max_length=50, verbose_name="Numéro d'envoi")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('notes_preparation', models.TextField(blank=True, null=True, verbose_name='Notes de préparation')),
                ('notes_livraison', models.TextField(blank=True, null=True, verbose_name='Notes de livraison')),
                ('commentaire', models.TextField(blank=True, null=True, verbose_name='Commentaires généraux')),
                ('nb_commandes', models.PositiveIntegerField(default=0, verbose_name='Nombre de commandes')),
                ('poids_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Poids total (kg)')),
                ('valeur_totale', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valeur totale (FCFA)')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='envois', to='commande.commande')),
                ('livreur', models.ForeignKey(blank=True, limit_choices_to={'type_operateur': 'LOGISTIQUE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois_livraison', to='parametre.operateur')),
                ('operateur_creation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois_crees', to='parametre.operateur', verbose_name='Créé par')),
                ('operateur_modification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois_modifies', to='parametre.operateur', verbose_name='Modifié par')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='envois', to='parametre.region')),
            ],
            options={
                'verbose_name': 'Envoi',
                'verbose_name_plural': 'Envois',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='commande',
            name='envoi',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commandes_associees', to='commande.envoi'),
        ),
        migrations.CreateModel(
            name='EtatArticleRenvoye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField(default=1)),
                ('date_maj', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.article')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats_articles_renvoyes', to='commande.commande')),
                ('etat', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='commande.enumetatcmd')),
            ],
            options={
                'verbose_name': "État d'article renvoyé",
                'verbose_name_plural': "États d'articles renvoyés",
            },
        ),
        migrations.CreateModel(
            name='EtatCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats', to='commande.commande')),
                ('enum_etat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commande.enumetatcmd')),
                ('operateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='etats_modifies', to='parametre.operateur')),
            ],
            options={
                'verbose_name': 'État de commande(Suivi de commande)',
                'verbose_name_plural': 'États de commande(Suivi de commande)',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_operation', models.CharField(choices=[('APPEL', 'Appel '), ('Appel Whatsapp', 'Appel Whatsapp'), ('Message Whatsapp', 'Appel Whatsapp '), ('Vocal Whatsapp', 'Vocal Whatsapp '), ('ENVOI_SMS', 'Envoi de SMS'), ('MODIFICATION', 'Modification'), ('PROBLEME_SIGNALÉ', 'Problème signalé'), ('RENVOI_PREPARATION', 'Renvoi en préparation')], max_length=30)),
                ('date_operation', models.DateTimeField(default=django.utils.timezone.now)),
                ('conclusion', models.TextField()),
                ('commentaire', models.TextField(blank=True, choices=[('Commande Annulée', 'Commande Annulée'), ('Client hésitant', 'Client hésitant'), ('Client intéressé', 'Client intéressé'), ('Client non intéressé', 'Client non intéressé'), ('Client non joignable', 'Client non joignable'), ('commande reportée', 'commande reportée'), ('Article non disponible', 'Article non disponible')], null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='commande.commande')),
                ('operateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='parametre.operateur')),
            ],
            options={
                'verbose_name': 'Opération',
                'verbose_name_plural': 'Opérations',
                'ordering': ['-date_operation'],
            },
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField()),
                ('sous_total', models.FloatField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='article.article')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='commande.commande')),
                ('variante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paniers', to='article.variantearticle')),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.AddIndex(
            model_name='envoi',
            index=models.Index(fields=['date_envoi', 'livreur'], name='commande_en_date_en_d5ea88_idx'),
        ),
        migrations.AddIndex(
            model_name='envoi',
            index=models.Index(fields=['status', 'date_creation'], name='commande_en_status_5a803b_idx'),
        ),
        migrations.AddIndex(
            model_name='envoi',
            index=models.Index(fields=['region', 'date_envoi'], name='commande_en_region__0615d1_idx'),
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(condition=models.Q(('total_cmd__gte', 0)), name='total_cmd_positif'),
        ),
        migrations.AlterUniqueTogether(
            name='etatarticlerenvoye',
            unique_together={('commande', 'article')},
        ),
        migrations.AddConstraint(
            model_name='etatcommande',
            constraint=models.CheckConstraint(condition=models.Q(('date_fin__isnull', True), ('date_debut__lte', models.F('date_fin')), _connector='OR'), name='date_debut_avant_date_fin'),
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(condition=models.Q(('quantite__gt', 0)), name='quantite_positive'),
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(condition=models.Q(('sous_total__gte', 0)), name='sous_total_positif'),
        ),
        migrations.AlterUniqueTogether(
            name='panier',
            unique_together={('commande', 'article', 'variante')},
        ),
    ]
