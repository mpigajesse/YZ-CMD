# Generated by Django 5.1.7 on 2025-06-13 13:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('client', '0001_initial'),
        ('parametre', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EnumEtatCmd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True)),
                ('ordre', models.IntegerField(default=0)),
                ('couleur', models.CharField(default='#6B7280', max_length=7)),
            ],
            options={
                'verbose_name': 'État de commande',
                'verbose_name_plural': 'États de commande',
                'ordering': ['ordre', 'libelle'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_cmd', models.CharField(max_length=50, unique=True)),
                ('id_yz', models.CharField(blank=True, max_length=50, null=True)),
                ('date_cmd', models.DateField(default=django.utils.timezone.now)),
                ('total_cmd', models.FloatField()),
                ('adresse', models.TextField()),
                ('motif_annulation', models.TextField(blank=True, null=True)),
                ('etat_paiement', models.CharField(choices=[('En attente', 'En attente'), ('Payé', 'Payé'), ('Échoué', 'Échoué')], default='En attente', max_length=20)),
                ('is_upsell', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='client.client')),
                ('ville', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='parametre.ville')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-date_cmd', '-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='EtatCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_fin', models.DateTimeField(blank=True, null=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etats', to='commande.commande')),
                ('enum_etat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='commande.enumetatcmd')),
            ],
            options={
                'verbose_name': 'État de commande',
                'verbose_name_plural': 'États de commande',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_operation', models.CharField(choices=[('CONFIRMATION', 'Confirmation'), ('ANNULATION', 'Annulation'), ('PREPARATION', 'Préparation'), ('EXPEDITION', 'Expédition'), ('LIVRAISON', 'Livraison'), ('RETOUR', 'Retour')], max_length=20)),
                ('date_operation', models.DateTimeField(default=django.utils.timezone.now)),
                ('conclusion', models.TextField()),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='commande.commande')),
                ('operateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='operations', to='parametre.operateur')),
            ],
            options={
                'verbose_name': 'Opération',
                'verbose_name_plural': 'Opérations',
                'ordering': ['-date_operation'],
            },
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField()),
                ('sous_total', models.FloatField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='article.article')),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='commande.commande')),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.AddConstraint(
            model_name='commande',
            constraint=models.CheckConstraint(condition=models.Q(('total_cmd__gte', 0)), name='total_cmd_positif'),
        ),
        migrations.AddConstraint(
            model_name='etatcommande',
            constraint=models.CheckConstraint(condition=models.Q(('date_fin__isnull', True), ('date_debut__lte', models.F('date_fin')), _connector='OR'), name='date_debut_avant_date_fin'),
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(condition=models.Q(('quantite__gt', 0)), name='quantite_positive'),
        ),
        migrations.AddConstraint(
            model_name='panier',
            constraint=models.CheckConstraint(condition=models.Q(('sous_total__gte', 0)), name='sous_total_positif'),
        ),
        migrations.AlterUniqueTogether(
            name='panier',
            unique_together={('commande', 'article')},
        ),
    ]
