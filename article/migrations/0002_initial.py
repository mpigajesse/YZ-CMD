# Generated by Django 5.1.7 on 2025-08-22 12:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('commande', '0001_initial'),
        ('parametre', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Rendre l'ajout de la colonne idempotent côté DB (évite l'erreur colonne existe déjà)
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=(
                        "ALTER TABLE article_mouvementstock "
                        "ADD COLUMN IF NOT EXISTS commande_associee_id integer NULL;\n"
                        "DO $$ BEGIN\n"
                        "IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'article_mouvementstock_commande_associee_id_fk') THEN\n"
                        "ALTER TABLE article_mouvementstock ADD CONSTRAINT article_mouvementstock_commande_associee_id_fk FOREIGN KEY (commande_associee_id) REFERENCES commande_commande(id) ON DELETE SET NULL;\n"
                        "END IF;\n"
                        "END $$;\n"
                        "CREATE INDEX IF NOT EXISTS article_mouvementstock_commande_associee_id_idx ON article_mouvementstock(commande_associee_id);"
                    ),
                    reverse_sql=(
                        "DROP INDEX IF EXISTS article_mouvementstock_commande_associee_id_idx;\n"
                        "ALTER TABLE article_mouvementstock DROP CONSTRAINT IF EXISTS article_mouvementstock_commande_associee_id_fk;\n"
                        "ALTER TABLE article_mouvementstock DROP COLUMN IF EXISTS commande_associee_id;"
                    ),
                )
            ],
            state_operations=[
                migrations.AddField(
                    model_name='mouvementstock',
                    name='commande_associee',
                    field=models.ForeignKey(blank=True, help_text='Commande liée à ce mouvement (si applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='commande.commande'),
                )
            ],
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=(
                        "ALTER TABLE article_mouvementstock "
                        "ADD COLUMN IF NOT EXISTS operateur_id integer NULL;\n"
                        "DO $$ BEGIN\n"
                        "IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'article_mouvementstock_operateur_id_fk') THEN\n"
                        "ALTER TABLE article_mouvementstock ADD CONSTRAINT article_mouvementstock_operateur_id_fk FOREIGN KEY (operateur_id) REFERENCES parametre_operateur(id) ON DELETE SET NULL;\n"
                        "END IF;\n"
                        "END $$;\n"
                        "CREATE INDEX IF NOT EXISTS article_mouvementstock_operateur_id_idx ON article_mouvementstock(operateur_id);"
                    ),
                    reverse_sql=(
                        "DROP INDEX IF EXISTS article_mouvementstock_operateur_id_idx;\n"
                        "ALTER TABLE article_mouvementstock DROP CONSTRAINT IF EXISTS article_mouvementstock_operateur_id_fk;\n"
                        "ALTER TABLE article_mouvementstock DROP COLUMN IF EXISTS operateur_id;"
                    ),
                )
            ],
            state_operations=[
                migrations.AddField(
                    model_name='mouvementstock',
                    name='operateur',
                    field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='parametre.operateur'),
                )
            ],
        ),
        migrations.AddField(
            model_name='promotion',
            name='articles',
            field=models.ManyToManyField(blank=True, limit_choices_to={'phase': 'EN_COURS'}, related_name='promotions', to='article.article'),
        ),
        migrations.AddField(
            model_name='promotion',
            name='cree_par',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='variantearticle',
            name='article',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variantes', to='article.article'),
        ),
        migrations.AddField(
            model_name='variantearticle',
            name='couleur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.couleur'),
        ),
        migrations.AddField(
            model_name='variantearticle',
            name='pointure',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.pointure'),
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunSQL(
                    sql=(
                        "ALTER TABLE article_mouvementstock "
                        "ADD COLUMN IF NOT EXISTS variante_id integer NULL;\n"
                        "DO $$ BEGIN\n"
                        "IF NOT EXISTS (SELECT 1 FROM pg_constraint WHERE conname = 'article_mouvementstock_variante_id_fk') THEN\n"
                        "ALTER TABLE article_mouvementstock ADD CONSTRAINT article_mouvementstock_variante_id_fk FOREIGN KEY (variante_id) REFERENCES article_variantearticle(id) ON DELETE CASCADE;\n"
                        "END IF;\n"
                        "END $$;\n"
                        "CREATE INDEX IF NOT EXISTS article_mouvementstock_variante_id_idx ON article_mouvementstock(variante_id);"
                    ),
                    reverse_sql=(
                        "DROP INDEX IF EXISTS article_mouvementstock_variante_id_idx;\n"
                        "ALTER TABLE article_mouvementstock DROP CONSTRAINT IF EXISTS article_mouvementstock_variante_id_fk;\n"
                        "ALTER TABLE article_mouvementstock DROP COLUMN IF EXISTS variante_id;"
                    ),
                )
            ],
            state_operations=[
                migrations.AddField(
                    model_name='mouvementstock',
                    name='variante',
                    field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mouvements', to='article.variantearticle'),
                )
            ],
        ),
        migrations.AddConstraint(
            model_name='article',
            constraint=models.CheckConstraint(condition=models.Q(('prix_unitaire__gt', 0)), name='prix_unitaire_positif'),
        ),
        migrations.AddConstraint(
            model_name='promotion',
            constraint=models.CheckConstraint(condition=models.Q(('date_fin__gt', models.F('date_debut'))), name='date_fin_apres_debut'),
        ),
        migrations.AlterUniqueTogether(
            name='variantearticle',
            unique_together={('article', 'couleur', 'pointure')},
        ),
    ]
