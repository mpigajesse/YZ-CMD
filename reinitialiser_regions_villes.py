import os
import sys
import django
from django.db import transaction

def setup_django():
    """Initialise l'environnement Django pour ex√©cuter le script."""
    sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '.')))
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    django.setup()

# --- Fonctions principales ---

def reinitialiser_donnees_geographiques():
    """
    Script pour r√©initialiser compl√®tement les donn√©es de Villes et R√©gions.
    1. D√©tache les commandes des villes pour √©viter la suppression en cascade.
    2. Supprime toutes les villes et r√©gions existantes.
    3. R√©importe les donn√©es propres depuis le fichier CSV via le script d'importation.
    """
    print("--- D√âBUT DE LA R√âINITIALISATION COMPL√àTE DES DONN√âES G√âOGRAPHIQUES ---")
    print("\nATTENTION : Cette op√©ration est irr√©versible et va modifier votre base de donn√©es.")
    print("Elle est con√ßue pour √™tre ex√©cut√©e UNE SEULE FOIS pour nettoyer la base.")

    from commande.models import Commande
    from parametre.models import Ville, Region
    # Importe la fonction sp√©cifique depuis votre script existant
    from import_regions_villes import import_data as importer_donnees_csv

    # Compte les objets existants pour le r√©sum√©
    command_count = Commande.objects.count()
    ville_count = Ville.objects.count()
    region_count = Region.objects.count()

    print("\n--- √âTAT ACTUEL DE LA BASE DE DONN√âES ---")
    print(f"- {command_count} commandes")
    print(f"- {ville_count} villes")
    print(f"- {region_count} r√©gions")

    print("\n--- PLAN DE L'OP√âRATION ---")
    print("1. Le champ 'ville' de TOUTES les commandes sera mis √† NULL pour √©viter la perte de donn√©es.")
    print("2. TOUTES les villes et TOUTES les r√©gions seront SUPPRIM√âES.")
    print("3. Les villes et r√©gions seront recharg√©es √† partir du fichier 'CMD_REGION - CMD_REGION.csv'.")
    print("-" * 60)
    
    # Demande de confirmation claire et explicite √† l'utilisateur
    confirm = input("√ätes-vous absolument s√ªr de vouloir continuer ? Cette action est d√©finitive. (o/N) : ").strip().lower()
    if confirm != 'o':
        print("\n--- ‚ùå Op√©ration annul√©e par l'utilisateur. ---")
        return

    try:
        # Utilise une transaction pour s'assurer que toute l'op√©ration r√©ussit ou √©choue d'un bloc
        with transaction.atomic():
            print("\n--- üöÄ Lancement de la r√©initialisation... ---")
            
            # √âtape 1: D√©tacher toutes les commandes de leurs villes
            print("\n√âtape 1/3: D√©tachement des commandes pour pr√©server les donn√©es...")
            updated_count = Commande.objects.update(ville=None)
            print(f"-> {updated_count} commandes ont √©t√© d√©tach√©es de leur ville. Aucune commande ne sera perdue.")

            # √âtape 2: Supprimer toutes les villes et r√©gions
            print("\n√âtape 2/3: Suppression des anciennes villes et r√©gions...")
            villes_deleted_count, _ = Ville.objects.all().delete()
            regions_deleted_count, _ = Region.objects.all().delete()
            print(f"-> {villes_deleted_count} villes supprim√©es.")
            print(f"-> {regions_deleted_count} r√©gions supprim√©es.")

            # √âtape 3: R√©importer les donn√©es propres depuis le CSV
            print("\n√âtape 3/3: R√©importation des donn√©es propres depuis le fichier CSV...")
            importer_donnees_csv()  # Appel de la fonction import√©e

        print("\n" + "="*60)
        print("--- ‚úÖ R√âINITIALISATION TERMIN√âE AVEC SUCC√àS ! ---")
        print("Vos tables de villes et r√©gions ont √©t√© purg√©es et recharg√©es proprement.")
        print("Le probl√®me de donn√©es invalides et de doublons est maintenant d√©finitivement corrig√©.")
        print("\nNOTE : Les commandes ne sont plus li√©es aux objets Ville. Le lien est pr√©serv√© dans le champ 'ville_init'.")
        print("="*60)

    except Exception as e:
        print(f"\n--- üö® UNE ERREUR CRITIQUE EST SURVENUE : {e} ---")
        print("--- L'op√©ration a √©t√© automatiquement annul√©e. Votre base de donn√©es n'a PAS √©t√© modifi√©e. ---")

if __name__ == "__main__":
    setup_django()
    reinitialiser_donnees_geographiques()