"""
Script pour comprendre pourquoi la Commande 12 est exclue par le filtre exclude.
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from commande.models import Commande, EtatCommande, Operation, EnumEtatCmd
from parametre.models import Operateur
from django.utils import timezone
from datetime import timedelta

def debug_commande_12_exclusion():
    """
    D√©bogue pourquoi la Commande 12 est exclue par le filtre exclude.
    """
    print("üîç D√©bogage de l'exclusion de la Commande 12")
    print("=" * 60)
    
    # R√©cup√©rer un op√©rateur de pr√©paration
    operateur_prepa = Operateur.objects.filter(
        type_operateur='PREPARATION',
        actif=True
    ).first()
    
    if not operateur_prepa:
        print("‚ùå Aucun op√©rateur de pr√©paration actif trouv√©")
        return
    
    print(f"‚úÖ Op√©rateur de pr√©paration: {operateur_prepa.prenom} {operateur_prepa.nom}")
    
    # R√©cup√©rer la Commande 12
    commande_12 = Commande.objects.filter(id_yz=12).first()
    
    if not commande_12:
        print("‚ùå Commande 12 non trouv√©e")
        return
    
    print(f"‚úÖ Commande 12 trouv√©e: {commande_12.num_cmd}")
    
    # 1. V√©rifier le filtre de base (sans exclude)
    print("\n1. Test du filtre de base (sans exclude):")
    
    commandes_base = Commande.objects.filter(
        etats__enum_etat__libelle__in=['√Ä imprimer', 'En pr√©paration'],
        etats__operateur=operateur_prepa,
        etats__date_fin__isnull=True
    ).select_related('client', 'ville', 'ville__region').prefetch_related('etats').distinct()
    
    print(f"   - {commandes_base.count()} commandes avec le filtre de base")
    
    if commande_12 in commandes_base:
        print(f"   ‚úÖ Commande 12 est dans le filtre de base")
    else:
        print(f"   ‚ùå Commande 12 n'est PAS dans le filtre de base")
    
    # 2. V√©rifier l'√©tat actuel de la Commande 12
    print("\n2. V√©rification de l'√©tat actuel de la Commande 12:")
    
    etat_actuel_12 = commande_12.etats.filter(
        enum_etat__libelle__in=['√Ä imprimer', 'En pr√©paration'],
        operateur=operateur_prepa,
        date_fin__isnull=True
    ).first()
    
    if etat_actuel_12:
        print(f"   ‚úÖ √âtat actuel: {etat_actuel_12.enum_etat.libelle}")
        print(f"      Date d√©but: {etat_actuel_12.date_debut.strftime('%d/%m/%Y %H:%M')}")
        print(f"      Op√©rateur: {etat_actuel_12.operateur.prenom} {etat_actuel_12.operateur.nom}")
    else:
        print(f"   ‚ùå Pas d'√©tat actuel trouv√©")
    
    # 3. V√©rifier les √©tats probl√©matiques de la Commande 12
    print("\n3. V√©rification des √©tats probl√©matiques de la Commande 12:")
    
    etats_problematiques = commande_12.etats.filter(
        enum_etat__libelle__in=['Livr√©e', 'Livr√©e Partiellement', 'Pr√©par√©e', 'En cours de livraison'],
        date_fin__isnull=True  # √âtats actifs
    )
    
    print(f"   - {etats_problematiques.count()} √©tats probl√©matiques actifs")
    
    for etat in etats_problematiques:
        print(f"   ‚ö†Ô∏è √âtat probl√©matique: {etat.enum_etat.libelle} ({etat.date_debut.strftime('%d/%m/%Y %H:%M')})")
        print(f"      Op√©rateur: {etat.operateur.prenom} {etat.operateur.nom}")
    
    # 4. Tester le filtre avec exclude
    print("\n4. Test du filtre avec exclude:")
    
    commandes_avec_exclude = Commande.objects.filter(
        etats__enum_etat__libelle__in=['√Ä imprimer', 'En pr√©paration'],
        etats__operateur=operateur_prepa,
        etats__date_fin__isnull=True
    ).exclude(
        etats__enum_etat__libelle__in=['Livr√©e', 'Livr√©e Partiellement', 'Pr√©par√©e', 'En cours de livraison']
    ).select_related('client', 'ville', 'ville__region').prefetch_related('etats').distinct()
    
    print(f"   - {commandes_avec_exclude.count()} commandes avec le filtre exclude")
    
    if commande_12 in commandes_avec_exclude:
        print(f"   ‚úÖ Commande 12 est dans le filtre avec exclude")
    else:
        print(f"   ‚ùå Commande 12 n'est PAS dans le filtre avec exclude")
        print(f"   üîç La Commande 12 est exclue par le filtre exclude")
    
    # 5. Analyser pourquoi l'exclude fonctionne
    print("\n5. Analyse de l'exclusion:")
    
    if etats_problematiques.exists():
        print(f"   La Commande 12 a des √©tats probl√©matiques actifs:")
        for etat in etats_problematiques:
            print(f"      - {etat.enum_etat.libelle} (actif depuis {etat.date_debut.strftime('%d/%m/%Y %H:%M')})")
        print(f"   Le filtre exclude les retire car ils sont actifs.")
    else:
        print(f"   Aucun √©tat probl√©matique actif trouv√©.")
    
    # 6. Solution
    print("\n6. Solution:")
    print(f"   Le probl√®me est que la Commande 12 a un √©tat 'Pr√©par√©e' actif.")
    print(f"   Le filtre exclude retire toutes les commandes qui ont des √©tats probl√©matiques actifs.")
    print(f"   Pour les commandes avec op√©ration de renvoi, on devrait ignorer cette exclusion.")
    
    print("\n" + "=" * 60)
    print("‚úÖ D√âBOGAGE TERMIN√â")
    print("=" * 60)

if __name__ == "__main__":
    debug_commande_12_exclusion() 